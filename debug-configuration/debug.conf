object Host "debug" {
  import "generic-host"
  address = "127.0.0.1"
  enable_notifications = false
}

template Service "debug-service" {
  import "generic-service"
  host_name = "debug"
  enable_notifications = false
}

object Service "Icinga Environment" {
  import "debug-service"
  check_command = "diagnostics_env" 
}

object Service "List Plugins" {
  import "debug-service"
  check_command = "diagnostics_ls"
}

object Service "Perl version" {
  import "debug-service"
  check_command = "diagnostics_perl_version"
}

object Service "Perl Include path" {
  import "debug-service"
  check_command = "diagnostics_perl_include_path"
}

object Service "Name of Icinga user" {
  import "debug-service"
  check_command = "diagnostics_icinga_user"
}

object Service "Name of Icinga Host running this Service" {
  import "debug-service"
  check_command = "diagnostics_executing_host"
}

object Service "Python 2 version" {
  import "debug-service"
  check_command = "diagnostics_python2_version"
}

object Service "Python 3 version" {
  import "debug-service"
  check_command = "diagnostics_python3_version"
}

object Service "Ruby version" {
  import "debug-service"
  check_command = "diagnostics_ruby_version"
}

object CheckCommand "diagnostics_env" {
  command = [ "/bin/env" ]
}

object CheckCommand "diagnostics_ls" {
  command = [ "/bin/ls" ]
  arguments = {
    "--path" = {
      value = "$ls_path$"
      description = "The path to check for permissions"
      skip_key = true
      required = true
      order = -1
    }
  }
  vars.ls_path = "/usr/lib64/nagios/plugins"
}

// This uses no path on purpose to use the standard binary Icinga uses

object CheckCommand "diagnostics_perl_version" {
  command = [  "perl" ]
  arguments = {
    "--version" = {
      set_if = true
    }
  }
}

// This uses no path on purpose to use the standard binary Icinga uses

object CheckCommand "diagnostics_perl_include_path" {
  command = [ "perl" ]
  arguments = {
    "-e" = {
      value = "print qq(@INC)"
    }
  }
}

object CheckCommand "diagnostics_icinga_user" {
  command = [ "/bin/whoami" ]
}

object CheckCommand "diagnostics_executing_host" {
  command = [ "/bin/uname" ]
  arguments = {
    "-n" = {
      set_if = true
    }
  }
}

object CheckCommand "diagnostics_python2_version" {
  command = [ "python" ]
  arguments = {
    "--version" = {
      set_if = true
    }
  }
}

object CheckCommand "diagnostics_python3_version" {
  command = [ "python3" ]
  arguments = {
    "--version" = {
      set_if = true
    }
  }
}

object CheckCommand "diagnostics_ruby_version" {
  command = [ "ruby" ]
  arguments = {
    "--version" = {
      set_if = true
    }
  }
}
